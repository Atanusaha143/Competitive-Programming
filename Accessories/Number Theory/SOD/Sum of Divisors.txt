int SOD(int n)
{
    bool prime[n+1];
    mem(prime,true);
    int sqr = sqrt(n);
    for(int i=2; i<=sqr; i++)
    {
        if(prime[i])
        {
            for(int j=2; i*j<=n; j++)
            {
                prime[i*j] = false;
            }
        }
    }
    
    int sum = 1;
    for(int i=2; i<=n; i++)
    {
        if(prime[i])
        {
            int power = 0;
            while(n%i==0)
            {
                n /= i;
                power++;
            }
            sum *= (pow(i,power+1)-1) / (i-1);
        }
    }
    
    if(n>1) sum = (pow(n,2)-1) / (n-1);
    
    return sum;
}
